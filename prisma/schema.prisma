datasource db {
    url      = env("DATABASE_URL")
    provider = "postgresql"
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id         String         @id @default(uuid())
    telegramID Int?           @unique
    createdAt  DateTime       @default(now())
    username   String?        @db.VarChar(255)
    password   String?
    answers    UserAnswer[]
    tokens     SessionToken[]
    state      State?
}

enum State {
    RANDOM
    ADAPTIVE
}

model SessionToken {
    id        String   @id @default(uuid())
    user      User     @relation(fields: [userID], references: [telegramID])
    userID    Int
    createdAt DateTime @default(now())
    active    Boolean  @default(true)
}

model QuestionCategory {
    id        String     @id @default(uuid())
    name      String     @unique @db.VarChar(255)
    questions Question[]
}

model Question {
    id                 String            @id @default(uuid())
    category           QuestionCategory? @relation(fields: [categoryID], references: [id])
    categoryID         String?
    img                String?           @db.VarChar(255)
    title              String            @db.Text
    answer_explanation String            @db.Text
    answers            Answer[]
    userAnswers        UserAnswer[]
}

model Answer {
    id         String    @id @default(uuid())
    text       String    @db.Text
    correct    Boolean   @default(false)
    question   Question? @relation(fields: [questionID], references: [id])
    questionID String?
}

model UserAnswer {
    id         String   @id @default(uuid())
    correct    Boolean  @default(false)
    createdAt  DateTime @default(now())
    question   Question @relation(fields: [questionID], references: [id])
    questionID String
    user       User     @relation(fields: [userID], references: [telegramID])
    userID     Int
}
